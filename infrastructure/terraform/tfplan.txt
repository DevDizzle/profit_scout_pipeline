
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # google_artifact_registry_repository.docker_repo will be created
  + resource "google_artifact_registry_repository" "docker_repo" {
      + create_time      = (known after apply)
      + description      = "Docker repository for Profit Scout pipeline services"
      + effective_labels = {
          + "goog-terraform-provisioned" = "true"
        }
      + format           = "DOCKER"
      + id               = (known after apply)
      + location         = "us-central1"
      + mode             = "STANDARD_REPOSITORY"
      + name             = (known after apply)
      + project          = "profit-scout-456416"
      + repository_id    = "profit-scout-repo"
      + terraform_labels = {
          + "goog-terraform-provisioned" = "true"
        }
      + update_time      = (known after apply)
    }

  # google_bigquery_dataset.profit_scout_dataset will be created
  + resource "google_bigquery_dataset" "profit_scout_dataset" {
      + creation_time              = (known after apply)
      + dataset_id                 = "profit_scout"
      + default_collation          = (known after apply)
      + delete_contents_on_destroy = false
      + description                = "Dataset for Profit Scout pipeline data"
      + effective_labels           = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                       = (known after apply)
      + id                         = (known after apply)
      + is_case_insensitive        = (known after apply)
      + last_modified_time         = (known after apply)
      + location                   = "US"
      + max_time_travel_hours      = (known after apply)
      + project                    = "profit-scout-456416"
      + self_link                  = (known after apply)
      + storage_billing_model      = (known after apply)
      + terraform_labels           = {
          + "goog-terraform-provisioned" = "true"
        }
    }

  # google_bigquery_dataset_iam_member.bq_editor_price_loader will be created
  + resource "google_bigquery_dataset_iam_member" "bq_editor_price_loader" {
      + dataset_id = "profit_scout"
      + etag       = (known after apply)
      + id         = (known after apply)
      + member     = "serviceAccount:profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project    = "profit-scout-456416"
      + role       = "roles/bigquery.dataEditor"
    }

  # google_bigquery_dataset_iam_member.bq_editor_ratio_calculator will be created
  + resource "google_bigquery_dataset_iam_member" "bq_editor_ratio_calculator" {
      + dataset_id = "profit_scout"
      + etag       = (known after apply)
      + id         = (known after apply)
      + member     = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project    = "profit-scout-456416"
      + role       = "roles/bigquery.dataEditor"
    }

  # google_bigquery_dataset_iam_member.bq_editor_subscriber will be created
  + resource "google_bigquery_dataset_iam_member" "bq_editor_subscriber" {
      + dataset_id = "profit_scout"
      + etag       = (known after apply)
      + id         = (known after apply)
      + member     = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project    = "profit-scout-456416"
      + role       = "roles/bigquery.dataEditor"
    }

  # google_bigquery_dataset_iam_member.bq_viewer_news_summarizer will be created
  + resource "google_bigquery_dataset_iam_member" "bq_viewer_news_summarizer" {
      + dataset_id = "profit_scout"
      + etag       = (known after apply)
      + id         = (known after apply)
      + member     = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project    = "profit-scout-456416"
      + role       = "roles/bigquery.dataViewer"
    }

  # google_bigquery_table.filing_metadata will be updated in-place
  ~ resource "google_bigquery_table" "filing_metadata" {
      ~ deletion_protection      = true -> false
        id                       = "projects/profit-scout-456416/datasets/profit_scout/tables/filing_metadata"
        # (19 unchanged attributes hidden)
    }

  # google_bigquery_table.financial_ratios will be created
  + resource "google_bigquery_table" "financial_ratios" {
      + creation_time       = (known after apply)
      + dataset_id          = "profit_scout"
      + deletion_protection = false
      + effective_labels    = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                = (known after apply)
      + expiration_time     = (known after apply)
      + id                  = (known after apply)
      + last_modified_time  = (known after apply)
      + location            = (known after apply)
      + max_staleness       = (known after apply)
      + num_bytes           = (known after apply)
      + num_long_term_bytes = (known after apply)
      + num_rows            = (known after apply)
      + project             = "profit-scout-456416"
      + schema              = jsonencode(
            [
              + {
                  + mode = "REQUIRED"
                  + name = "ticker"
                  + type = "STRING"
                },
              + {
                  + mode = "REQUIRED"
                  + name = "accession_number"
                  + type = "STRING"
                },
              + {
                  + mode = "REQUIRED"
                  + name = "report_end_date"
                  + type = "DATE"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "filed_date"
                  + type = "DATE"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "debt_to_equity"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "fcf_yield"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "current_ratio"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "roe"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "gross_margin"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "operating_margin"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "quick_ratio"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "eps"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "eps_change"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "revenue_growth"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "price_trend_ratio"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "shares_outstanding"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "data_source"
                  + type = "STRING"
                },
              + {
                  + mode = "REQUIRED"
                  + name = "created_at"
                  + type = "TIMESTAMP"
                },
            ]
        )
      + self_link           = (known after apply)
      + table_id            = "financial_ratios"
      + terraform_labels    = {
          + "goog-terraform-provisioned" = "true"
        }
      + type                = (known after apply)
    }

  # google_bigquery_table.income_statement will be updated in-place
  ~ resource "google_bigquery_table" "income_statement" {
        id                       = "projects/profit-scout-456416/datasets/profit_scout/tables/income_statement"
      ~ schema                   = jsonencode(
          ~ [
                # (1 unchanged element hidden)
                {
                    mode = "NULLABLE"
                    name = "period_end_date"
                    type = "TIMESTAMP"
                },
              ~ {
                    name = "amortization"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "amortization_of_intangibles_income_statement"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "average_dilution_earnings"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "basic_average_shares"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "basic_eps"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "cost_of_revenue"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "depletion_income_statement"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "depreciation_amortization_depletion_income_statement"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "depreciation_and_amortization_in_income_statement"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "depreciation_income_statement"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "diluted_average_shares"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "diluted_eps"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "diluted_ni_availto_com_stockholders"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "earnings_from_equity_interest"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "earnings_from_equity_interest_net_of_tax"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "ebit"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "ebitda"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "excise_taxes"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "gain_on_sale_of_business"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "gain_on_sale_of_ppe"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "gain_on_sale_of_security"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "general_and_administrative_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "gross_profit"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "impairment_of_capital_assets"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "insurance_and_claims"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "interest_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "interest_expense_non_operating"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "interest_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "interest_income_non_operating"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "loss_adjustment_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "minority_interests"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_common_stockholders"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_continuous_operations"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_discontinuous_operations"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_from_continuing_and_discontinued_operation"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_from_continuing_operation_net_minority_interest"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_from_tax_loss_carryforward"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_income_including_noncontrolling_interests"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_interest_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_non_operating_interest_income_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "net_policyholder_benefits_and_claims"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "normalized_ebitda"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "normalized_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "occupancy_and_equipment"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "operating_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "operating_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "operating_revenue"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_gand_a"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_income_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_non_interest_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_non_operating_income_expenses"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_operating_expenses"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_special_charges"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "other_taxes"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "otherunder_preferred_stock_dividend"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "policyholder_benefits_ceded"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "policyholder_benefits_gross"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "preferred_stock_dividends"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "pretax_income"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "professional_expense_and_contract_services_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "provision_for_doubtful_accounts"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "reconciled_cost_of_revenue"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "reconciled_depreciation"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "rent_and_landing_fees"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "rent_expense_supplemental"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "research_and_development"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "restructuring_and_mergern_acquisition"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "salaries_and_wages"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "securities_amortization"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "selling_and_marketing_expense"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "selling_general_and_administration"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "special_income_charges"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "tax_effect_of_unusual_items"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "tax_provision"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "tax_rate_for_calcs"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_expenses"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_operating_income_as_reported"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_other_finance_cost"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_revenue"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_unusual_items"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                    name = "total_unusual_items_excluding_goodwill"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              ~ {
                  ~ name = "write_off" -> "weighted_average_number_of_diluted_shares_outstanding"
                  ~ type = "FLOAT" -> "FLOAT64"
                    # (1 unchanged attribute hidden)
                },
              + {
                  + mode = "NULLABLE"
                  + name = "weighted_average_number_of_shares_outstanding_basic"
                  + type = "FLOAT64"
                },
              + {
                  + mode = "NULLABLE"
                  + name = "write_off"
                  + type = "FLOAT64"
                },
            ]
        )
        # (19 unchanged attributes hidden)
    }

  # google_cloud_run_v2_job.price_loader_job will be created
  + resource "google_cloud_run_v2_job" "price_loader_job" {
      + conditions               = (known after apply)
      + create_time              = (known after apply)
      + creator                  = (known after apply)
      + delete_time              = (known after apply)
      + deletion_protection      = true
      + effective_annotations    = (known after apply)
      + effective_labels         = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                     = (known after apply)
      + execution_count          = (known after apply)
      + expire_time              = (known after apply)
      + generation               = (known after apply)
      + id                       = (known after apply)
      + last_modifier            = (known after apply)
      + latest_created_execution = (known after apply)
      + launch_stage             = (known after apply)
      + location                 = "us-central1"
      + name                     = "profit-scout-price-loader"
      + observed_generation      = (known after apply)
      + project                  = "profit-scout-456416"
      + reconciling              = (known after apply)
      + terminal_condition       = (known after apply)
      + terraform_labels         = {
          + "goog-terraform-provisioned" = "true"
        }
      + uid                      = (known after apply)
      + update_time              = (known after apply)

      + template {
          + parallelism = (known after apply)
          + task_count  = 1

          + template {
              + execution_environment = (known after apply)
              + max_retries           = 2
              + service_account       = "profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
              + timeout               = "3600s"

              + containers {
                  + image = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/price-loader:latest"

                  + env {
                      + name  = "BQ_DATASET_ID"
                      + value = "profit_scout"
                    }
                  + env {
                      + name  = "BQ_METADATA_TABLE_ID"
                      + value = "filing_metadata"
                    }
                  + env {
                      + name  = "BQ_PRICES_TABLE_ID"
                      + value = "price_data"
                    }
                  + env {
                      + name  = "GCP_PROJECT_ID"
                      + value = "profit-scout-456416"
                    }
                  + env {
                      + name  = "GCS_BUCKET_NAME"
                      + value = "profit-scout"
                    }

                  + resources {
                      + limits = {
                          + "cpu"    = "1000m"
                          + "memory" = "1Gi"
                        }
                    }
                }
            }
        }
    }

  # google_cloud_run_v2_job.ratio_calculator_job will be created
  + resource "google_cloud_run_v2_job" "ratio_calculator_job" {
      + conditions               = (known after apply)
      + create_time              = (known after apply)
      + creator                  = (known after apply)
      + delete_time              = (known after apply)
      + deletion_protection      = true
      + effective_annotations    = (known after apply)
      + effective_labels         = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                     = (known after apply)
      + execution_count          = (known after apply)
      + expire_time              = (known after apply)
      + generation               = (known after apply)
      + id                       = (known after apply)
      + last_modifier            = (known after apply)
      + latest_created_execution = (known after apply)
      + launch_stage             = (known after apply)
      + location                 = "us-central1"
      + name                     = "profit-scout-ratio-calculator"
      + observed_generation      = (known after apply)
      + project                  = "profit-scout-456416"
      + reconciling              = (known after apply)
      + terminal_condition       = (known after apply)
      + terraform_labels         = {
          + "goog-terraform-provisioned" = "true"
        }
      + uid                      = (known after apply)
      + update_time              = (known after apply)

      + template {
          + parallelism = (known after apply)
          + task_count  = 1

          + template {
              + execution_environment = (known after apply)
              + max_retries           = 2
              + service_account       = "profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
              + timeout               = "3600s"

              + containers {
                  + image = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/ratio-calculator:latest"

                  + env {
                      + name  = "BQ_DATASET_ID"
                      + value = "profit_scout"
                    }
                  + env {
                      + name  = "BQ_FINANCIALS_BS_TABLE_ID"
                      + value = "balance_sheet"
                    }
                  + env {
                      + name  = "BQ_FINANCIALS_CF_TABLE_ID"
                      + value = "cash_flow"
                    }
                  + env {
                      + name  = "BQ_FINANCIALS_IS_TABLE_ID"
                      + value = "income_statement"
                    }
                  + env {
                      + name  = "BQ_METADATA_TABLE_ID"
                      + value = "filing_metadata"
                    }
                  + env {
                      + name  = "BQ_PRICE_TABLE_ID"
                      + value = "price_data"
                    }
                  + env {
                      + name  = "BQ_RATIOS_TABLE_ID"
                      + value = "financial_ratios"
                    }
                  + env {
                      + name  = "GCP_PROJECT_ID"
                      + value = "profit-scout-456416"
                    }
                  + env {
                      + name  = "GCS_BUCKET_NAME"
                      + value = "profit-scout"
                    }
                  + env {
                      + name  = "GEMINI_API_KEY_SECRET_ID"
                      + value = "gemini-api-key"
                    }
                  + env {
                      + name  = "GEMINI_API_KEY_SECRET_VERSION"
                      + value = "latest"
                    }
                  + env {
                      + name  = "GEMINI_MODEL_NAME"
                      + value = "gemini-2.0-flash-001"
                    }
                  + env {
                      + name  = "MAX_WORKERS"
                      + value = "8"
                    }

                  + resources {
                      + limits = {
                          + "cpu"    = "2000m"
                          + "memory" = "2Gi"
                        }
                    }
                }
            }
        }
    }

  # google_cloud_run_v2_job_iam_member.price_loader_scheduler_invoker will be created
  + resource "google_cloud_run_v2_job_iam_member" "price_loader_scheduler_invoker" {
      + etag     = (known after apply)
      + id       = (known after apply)
      + location = "us-central1"
      + member   = "serviceAccount:service-264262717470@gcp-sa-cloudscheduler.iam.gserviceaccount.com"
      + name     = "profit-scout-price-loader"
      + project  = "profit-scout-456416"
      + role     = "roles/run.invoker"
    }

  # google_cloud_run_v2_job_iam_member.ratio_calculator_scheduler_invoker will be created
  + resource "google_cloud_run_v2_job_iam_member" "ratio_calculator_scheduler_invoker" {
      + etag     = (known after apply)
      + id       = (known after apply)
      + location = "us-central1"
      + member   = "serviceAccount:service-264262717470@gcp-sa-cloudscheduler.iam.gserviceaccount.com"
      + name     = "profit-scout-ratio-calculator"
      + project  = "profit-scout-456416"
      + role     = "roles/run.invoker"
    }

  # google_cloud_run_v2_service.listener_service will be created
  + resource "google_cloud_run_v2_service" "listener_service" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + creator                 = (known after apply)
      + delete_time             = (known after apply)
      + deletion_protection     = true
      + effective_annotations   = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + expire_time             = (known after apply)
      + generation              = (known after apply)
      + id                      = (known after apply)
      + ingress                 = (known after apply)
      + last_modifier           = (known after apply)
      + latest_created_revision = (known after apply)
      + latest_ready_revision   = (known after apply)
      + launch_stage            = (known after apply)
      + location                = "us-central1"
      + name                    = "profit-scout-listener"
      + observed_generation     = (known after apply)
      + project                 = "profit-scout-456416"
      + reconciling             = (known after apply)
      + terminal_condition      = (known after apply)
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + traffic_statuses        = (known after apply)
      + uid                     = (known after apply)
      + update_time             = (known after apply)
      + uri                     = (known after apply)
      + urls                    = (known after apply)

      + template {
          + max_instance_request_concurrency = (known after apply)
          + service_account                  = "profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
          + timeout                          = (known after apply)

          + containers {
              + build_info = (known after apply)
              + image      = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/listener:latest"

              + env {
                  + name  = "BQ_DATASET_ID"
                  + value = "profit_scout"
                }
              + env {
                  + name  = "GCP_PROJECT_ID"
                  + value = "profit-scout-456416"
                }
              + env {
                  + name  = "GCS_BUCKET_NAME"
                  + value = "profit-scout"
                }
              + env {
                  + name  = "PUB_SUB_TOPIC_ID"
                  + value = "sec-filing-notification"
                }
              + env {
                  + name  = "SEC_API_SECRET_ID"
                  + value = "sec-api-key"
                }
              + env {
                  + name  = "SEC_WEBSOCKET_URL"
                  + value = "wss://sec-api.io/stream"
                }

              + resources {
                  + cpu_idle          = false
                  + limits            = {
                      + "cpu"    = "1000m"
                      + "memory" = "512Mi"
                    }
                  + startup_cpu_boost = true
                }
            }

          + scaling {
              + max_instance_count = 1
              + min_instance_count = 1
            }
        }
    }

  # google_cloud_run_v2_service.news_summarizer_service will be created
  + resource "google_cloud_run_v2_service" "news_summarizer_service" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + creator                 = (known after apply)
      + delete_time             = (known after apply)
      + deletion_protection     = true
      + effective_annotations   = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + expire_time             = (known after apply)
      + generation              = (known after apply)
      + id                      = (known after apply)
      + ingress                 = (known after apply)
      + last_modifier           = (known after apply)
      + latest_created_revision = (known after apply)
      + latest_ready_revision   = (known after apply)
      + launch_stage            = (known after apply)
      + location                = "us-central1"
      + name                    = "profit-scout-news-summarizer"
      + observed_generation     = (known after apply)
      + project                 = "profit-scout-456416"
      + reconciling             = (known after apply)
      + terminal_condition      = (known after apply)
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + traffic_statuses        = (known after apply)
      + uid                     = (known after apply)
      + update_time             = (known after apply)
      + uri                     = (known after apply)
      + urls                    = (known after apply)

      + template {
          + max_instance_request_concurrency = (known after apply)
          + service_account                  = "profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
          + timeout                          = (known after apply)

          + containers {
              + build_info = (known after apply)
              + image      = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/news-summarizer:latest"

              + env {
                  + name  = "BQ_DATASET_ID"
                  + value = "profit_scout"
                }
              + env {
                  + name  = "BQ_METADATA_TABLE_ID"
                  + value = "filing_metadata"
                }
              + env {
                  + name  = "GCP_PROJECT_ID"
                  + value = "profit-scout-456416"
                }
              + env {
                  + name  = "GCP_REGION"
                  + value = "us-central1"
                }
              + env {
                  + name  = "GCS_BUCKET_NAME"
                  + value = "profit-scout"
                }
              + env {
                  + name  = "GCS_NEWS_SUMMARY_PREFIX"
                  + value = "headline-analysis/"
                }
              + env {
                  + name  = "GCS_PDF_PREFIX"
                  + value = "sec-pdf/"
                }
              + env {
                  + name  = "GEMINI_MODEL_NAME"
                  + value = "gemini-2.0-flash-001"
                }

              + ports {
                  + container_port = 8080
                  + name           = (known after apply)
                }

              + resources {
                  + limits = {
                      + "cpu"    = "1000m"
                      + "memory" = "1Gi"
                    }
                }
            }
        }
    }

  # google_cloud_run_v2_service.pdf_summarizer_service will be created
  + resource "google_cloud_run_v2_service" "pdf_summarizer_service" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + creator                 = (known after apply)
      + delete_time             = (known after apply)
      + deletion_protection     = true
      + effective_annotations   = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + expire_time             = (known after apply)
      + generation              = (known after apply)
      + id                      = (known after apply)
      + ingress                 = (known after apply)
      + last_modifier           = (known after apply)
      + latest_created_revision = (known after apply)
      + latest_ready_revision   = (known after apply)
      + launch_stage            = (known after apply)
      + location                = "us-central1"
      + name                    = "profit-scout-pdf-summarizer"
      + observed_generation     = (known after apply)
      + project                 = "profit-scout-456416"
      + reconciling             = (known after apply)
      + terminal_condition      = (known after apply)
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + traffic_statuses        = (known after apply)
      + uid                     = (known after apply)
      + update_time             = (known after apply)
      + uri                     = (known after apply)
      + urls                    = (known after apply)

      + template {
          + max_instance_request_concurrency = (known after apply)
          + service_account                  = "profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
          + timeout                          = (known after apply)

          + containers {
              + build_info = (known after apply)
              + image      = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/pdf-summarizer:latest"

              + env {
                  + name  = "BQ_DATASET_ID"
                  + value = "profit_scout"
                }
              + env {
                  + name  = "GCP_PROJECT_ID"
                  + value = "profit-scout-456416"
                }
              + env {
                  + name  = "GCS_ANALYSIS_TXT_PREFIX"
                  + value = "sec-analysis/"
                }
              + env {
                  + name  = "GCS_BUCKET_NAME"
                  + value = "profit-scout"
                }
              + env {
                  + name  = "GCS_PDF_PREFIX"
                  + value = "sec-pdf/"
                }
              + env {
                  + name  = "GEMINI_API_KEY_SECRET_ID"
                  + value = "gemini-api-key"
                }
              + env {
                  + name  = "GEMINI_API_KEY_SECRET_VERSION"
                  + value = "latest"
                }
              + env {
                  + name  = "GEMINI_MODEL_NAME"
                  + value = "gemini-2.0-flash-001"
                }

              + ports {
                  + container_port = 8080
                  + name           = (known after apply)
                }

              + resources {
                  + limits = {
                      + "cpu"    = "1000m"
                      + "memory" = "1Gi"
                    }
                }
            }
        }
    }

  # google_cloud_run_v2_service.subscriber_service will be created
  + resource "google_cloud_run_v2_service" "subscriber_service" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + creator                 = (known after apply)
      + delete_time             = (known after apply)
      + deletion_protection     = true
      + effective_annotations   = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + expire_time             = (known after apply)
      + generation              = (known after apply)
      + id                      = (known after apply)
      + ingress                 = (known after apply)
      + last_modifier           = (known after apply)
      + latest_created_revision = (known after apply)
      + latest_ready_revision   = (known after apply)
      + launch_stage            = (known after apply)
      + location                = "us-central1"
      + name                    = "profit-scout-subscriber"
      + observed_generation     = (known after apply)
      + project                 = "profit-scout-456416"
      + reconciling             = (known after apply)
      + terminal_condition      = (known after apply)
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + traffic_statuses        = (known after apply)
      + uid                     = (known after apply)
      + update_time             = (known after apply)
      + uri                     = (known after apply)
      + urls                    = (known after apply)

      + template {
          + max_instance_request_concurrency = (known after apply)
          + service_account                  = "profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
          + timeout                          = (known after apply)

          + containers {
              + build_info = (known after apply)
              + image      = "us-central1-docker.pkg.dev/profit-scout-456416/profit-scout-repo/subscriber:latest"

              + env {
                  + name  = "BQ_DATASET_ID"
                  + value = "profit_scout"
                }
              + env {
                  + name  = "BQ_FINANCIALS_BS_TABLE_ID"
                  + value = "balance_sheet"
                }
              + env {
                  + name  = "BQ_FINANCIALS_CF_TABLE_ID"
                  + value = "cash_flow"
                }
              + env {
                  + name  = "BQ_FINANCIALS_IS_TABLE_ID"
                  + value = "income_statement"
                }
              + env {
                  + name  = "BQ_METADATA_TABLE_ID"
                  + value = "filing_metadata"
                }
              + env {
                  + name  = "GCP_PROJECT_ID"
                  + value = "profit-scout-456416"
                }
              + env {
                  + name  = "GCS_BUCKET_NAME"
                  + value = "profit-scout"
                }
              + env {
                  + name  = "GCS_PDF_FOLDER"
                  + value = "sec-pdf/"
                }
              + env {
                  + name  = "SEC_API_SECRET_ID"
                  + value = "sec-api-key"
                }
              + env {
                  + name  = "SEC_API_SECRET_VERSION"
                  + value = "latest"
                }

              + ports {
                  + container_port = 8080
                  + name           = (known after apply)
                }

              + resources {
                  + limits = {
                      + "cpu"    = "1000m"
                      + "memory" = "512Mi"
                    }
                }
            }
        }
    }

  # google_cloud_scheduler_job.trigger_price_loader will be created
  + resource "google_cloud_scheduler_job" "trigger_price_loader" {
      + attempt_deadline = "3500s"
      + id               = (known after apply)
      + name             = "trigger-profit-scout-price-loader"
      + paused           = (known after apply)
      + project          = "profit-scout-456416"
      + region           = "us-central1"
      + schedule         = "5 16 * * *"
      + state            = (known after apply)
      + time_zone        = "America/New_York"

      + http_target {
          + http_method = "POST"
          + uri         = "https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/projects/profit-scout-456416/locations/us-central1/jobs/profit-scout-price-loader:run"

          + oidc_token {
              + audience              = "https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/projects/profit-scout-456416/locations/us-central1/jobs/profit-scout-price-loader:run"
              + service_account_email = "service-264262717470@gcp-sa-cloudscheduler.iam.gserviceaccount.com"
            }
        }
    }

  # google_cloud_scheduler_job.trigger_ratio_calculator will be created
  + resource "google_cloud_scheduler_job" "trigger_ratio_calculator" {
      + attempt_deadline = "3500s"
      + id               = (known after apply)
      + name             = "trigger-profit-scout-ratio-calculator"
      + paused           = (known after apply)
      + project          = "profit-scout-456416"
      + region           = "us-central1"
      + schedule         = "35 16 * * *"
      + state            = (known after apply)
      + time_zone        = "America/New_York"

      + http_target {
          + http_method = "POST"
          + uri         = "https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/projects/profit-scout-456416/locations/us-central1/jobs/profit-scout-ratio-calculator:run"

          + oidc_token {
              + audience              = "https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/projects/profit-scout-456416/locations/us-central1/jobs/profit-scout-ratio-calculator:run"
              + service_account_email = "service-264262717470@gcp-sa-cloudscheduler.iam.gserviceaccount.com"
            }
        }
    }

  # google_eventarc_trigger.trigger_news_summarizer will be created
  + resource "google_eventarc_trigger" "trigger_news_summarizer" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + event_data_content_type = (known after apply)
      + id                      = (known after apply)
      + location                = "us-central1"
      + name                    = "trigger-gcs-news-summarizer"
      + project                 = "profit-scout-456416"
      + service_account         = "profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + uid                     = (known after apply)
      + update_time             = (known after apply)

      + destination {
          + cloud_function = (known after apply)

          + cloud_run_service {
              + region  = "us-central1"
              + service = "profit-scout-news-summarizer"
            }
        }

      + matching_criteria {
          + attribute = "bucket"
          + value     = "profit-scout"
        }
      + matching_criteria {
          + attribute = "name"
          + operator  = "starts-with"
          + value     = "sec-pdf/"
        }
      + matching_criteria {
          + attribute = "type"
          + value     = "google.cloud.storage.object.v1.finalized"
        }
    }

  # google_eventarc_trigger.trigger_pdf_summarizer will be created
  + resource "google_eventarc_trigger" "trigger_pdf_summarizer" {
      + conditions              = (known after apply)
      + create_time             = (known after apply)
      + effective_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + etag                    = (known after apply)
      + event_data_content_type = (known after apply)
      + id                      = (known after apply)
      + location                = "us-central1"
      + name                    = "trigger-gcs-pdf-summarizer"
      + project                 = "profit-scout-456416"
      + service_account         = "profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + terraform_labels        = {
          + "goog-terraform-provisioned" = "true"
        }
      + uid                     = (known after apply)
      + update_time             = (known after apply)

      + destination {
          + cloud_function = (known after apply)

          + cloud_run_service {
              + region  = "us-central1"
              + service = "profit-scout-pdf-summarizer"
            }
        }

      + matching_criteria {
          + attribute = "bucket"
          + value     = "profit-scout"
        }
      + matching_criteria {
          + attribute = "name"
          + operator  = "starts-with"
          + value     = "sec-pdf/"
        }
      + matching_criteria {
          + attribute = "type"
          + value     = "google.cloud.storage.object.v1.finalized"
        }
    }

  # google_project_iam_member.ai_user_news_summarizer will be created
  + resource "google_project_iam_member" "ai_user_news_summarizer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/aiplatform.user"
    }

  # google_project_iam_member.ai_user_pdf_summarizer will be created
  + resource "google_project_iam_member" "ai_user_pdf_summarizer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/aiplatform.user"
    }

  # google_project_iam_member.ai_user_ratio_calculator will be created
  + resource "google_project_iam_member" "ai_user_ratio_calculator" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/aiplatform.user"
    }

  # google_project_iam_member.bq_job_user_news_summarizer will be created
  + resource "google_project_iam_member" "bq_job_user_news_summarizer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/bigquery.jobUser"
    }

  # google_project_iam_member.bq_job_user_price_loader will be created
  + resource "google_project_iam_member" "bq_job_user_price_loader" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/bigquery.jobUser"
    }

  # google_project_iam_member.bq_job_user_ratio_calculator will be created
  + resource "google_project_iam_member" "bq_job_user_ratio_calculator" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/bigquery.jobUser"
    }

  # google_project_iam_member.bq_job_user_subscriber will be created
  + resource "google_project_iam_member" "bq_job_user_subscriber" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/bigquery.jobUser"
    }

  # google_project_iam_member.log_writer_listener will be created
  + resource "google_project_iam_member" "log_writer_listener" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.log_writer_news_summarizer will be created
  + resource "google_project_iam_member" "log_writer_news_summarizer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.log_writer_pdf_summarizer will be created
  + resource "google_project_iam_member" "log_writer_pdf_summarizer" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.log_writer_price_loader will be created
  + resource "google_project_iam_member" "log_writer_price_loader" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.log_writer_ratio_calculator will be created
  + resource "google_project_iam_member" "log_writer_ratio_calculator" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.log_writer_subscriber will be created
  + resource "google_project_iam_member" "log_writer_subscriber" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/logging.logWriter"
    }

  # google_project_iam_member.news_summarizer_eventarc_receiver will be created
  + resource "google_project_iam_member" "news_summarizer_eventarc_receiver" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/eventarc.eventReceiver"
    }

  # google_project_iam_member.pdf_summarizer_eventarc_receiver will be created
  + resource "google_project_iam_member" "pdf_summarizer_eventarc_receiver" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/eventarc.eventReceiver"
    }

  # google_project_service.required_apis["aiplatform.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "aiplatform.googleapis.com"
    }

  # google_project_service.required_apis["artifactregistry.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "artifactregistry.googleapis.com"
    }

  # google_project_service.required_apis["bigquery.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "bigquery.googleapis.com"
    }

  # google_project_service.required_apis["cloudbuild.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "cloudbuild.googleapis.com"
    }

  # google_project_service.required_apis["cloudscheduler.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "cloudscheduler.googleapis.com"
    }

  # google_project_service.required_apis["compute.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "compute.googleapis.com"
    }

  # google_project_service.required_apis["eventarc.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "eventarc.googleapis.com"
    }

  # google_project_service.required_apis["iam.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "iam.googleapis.com"
    }

  # google_project_service.required_apis["pubsub.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "pubsub.googleapis.com"
    }

  # google_project_service.required_apis["run.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "run.googleapis.com"
    }

  # google_project_service.required_apis["secretmanager.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "secretmanager.googleapis.com"
    }

  # google_project_service.required_apis["storage.googleapis.com"] will be created
  + resource "google_project_service" "required_apis" {
      + disable_dependent_services = false
      + disable_on_destroy         = false
      + id                         = (known after apply)
      + project                    = "profit-scout-456416"
      + service                    = "storage.googleapis.com"
    }

  # google_pubsub_subscription.subscriber_push_subscription will be created
  + resource "google_pubsub_subscription" "subscriber_push_subscription" {
      + ack_deadline_seconds       = 60
      + effective_labels           = {
          + "goog-terraform-provisioned" = "true"
        }
      + id                         = (known after apply)
      + message_retention_duration = "604800s"
      + name                       = "profit-scout-subscriber-sub"
      + project                    = "profit-scout-456416"
      + terraform_labels           = {
          + "goog-terraform-provisioned" = "true"
        }
      + topic                      = "projects/profit-scout-456416/topics/sec-filing-notification"

      + push_config {
          + push_endpoint = (known after apply)

          + oidc_token {
              + service_account_email = "profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
            }
        }

      + retry_policy {
          + maximum_backoff = "600s"
          + minimum_backoff = "10s"
        }
    }

  # google_pubsub_topic_iam_member.listener_pubsub_publisher will be created
  + resource "google_pubsub_topic_iam_member" "listener_pubsub_publisher" {
      + etag    = (known after apply)
      + id      = (known after apply)
      + member  = "serviceAccount:profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project = "profit-scout-456416"
      + role    = "roles/pubsub.publisher"
      + topic   = "sec-filing-notification"
    }

  # google_secret_manager_secret_iam_member.gemini_accessor_pdf_summarizer will be created
  + resource "google_secret_manager_secret_iam_member" "gemini_accessor_pdf_summarizer" {
      + etag      = (known after apply)
      + id        = (known after apply)
      + member    = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project   = "profit-scout-456416"
      + role      = "roles/secretmanager.secretAccessor"
      + secret_id = "gemini-api-key"
    }

  # google_secret_manager_secret_iam_member.gemini_accessor_ratio_calculator will be created
  + resource "google_secret_manager_secret_iam_member" "gemini_accessor_ratio_calculator" {
      + etag      = (known after apply)
      + id        = (known after apply)
      + member    = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project   = "profit-scout-456416"
      + role      = "roles/secretmanager.secretAccessor"
      + secret_id = "gemini-api-key"
    }

  # google_secret_manager_secret_iam_member.sec_accessor_listener will be created
  + resource "google_secret_manager_secret_iam_member" "sec_accessor_listener" {
      + etag      = (known after apply)
      + id        = (known after apply)
      + member    = "serviceAccount:profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project   = "profit-scout-456416"
      + role      = "roles/secretmanager.secretAccessor"
      + secret_id = "sec-api-key"
    }

  # google_secret_manager_secret_iam_member.sec_accessor_subscriber will be created
  + resource "google_secret_manager_secret_iam_member" "sec_accessor_subscriber" {
      + etag      = (known after apply)
      + id        = (known after apply)
      + member    = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + project   = "profit-scout-456416"
      + role      = "roles/secretmanager.secretAccessor"
      + secret_id = "sec-api-key"
    }

  # google_service_account.listener_sa will be created
  + resource "google_service_account" "listener_sa" {
      + account_id   = "profit-scout-listener-sa"
      + disabled     = false
      + display_name = "Profit Scout Listener Service Account"
      + email        = "profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-listener-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account.news_summarizer_sa will be created
  + resource "google_service_account" "news_summarizer_sa" {
      + account_id   = "profit-scout-news-sum-sa"
      + disabled     = false
      + display_name = "Profit Scout News Summarizer Service Account"
      + email        = "profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account.pdf_summarizer_sa will be created
  + resource "google_service_account" "pdf_summarizer_sa" {
      + account_id   = "profit-scout-pdf-sum-sa"
      + disabled     = false
      + display_name = "Profit Scout PDF Summarizer Service Account"
      + email        = "profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account.price_loader_sa will be created
  + resource "google_service_account" "price_loader_sa" {
      + account_id   = "profit-scout-price-loader-sa"
      + disabled     = false
      + display_name = "Profit Scout Price Loader Service Account"
      + email        = "profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-price-loader-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account.ratio_calculator_sa will be created
  + resource "google_service_account" "ratio_calculator_sa" {
      + account_id   = "profit-scout-ratio-calc-sa"
      + disabled     = false
      + display_name = "Profit Scout Ratio Calculator Service Account"
      + email        = "profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-ratio-calc-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account.subscriber_sa will be created
  + resource "google_service_account" "subscriber_sa" {
      + account_id   = "profit-scout-subscriber-sa"
      + disabled     = false
      + display_name = "Profit Scout Subscriber Service Account"
      + email        = "profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + id           = (known after apply)
      + member       = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + name         = (known after apply)
      + project      = "profit-scout-456416"
      + unique_id    = (known after apply)
    }

  # google_service_account_iam_member.subscriber_sa_pubsub_token_creator will be created
  + resource "google_service_account_iam_member" "subscriber_sa_pubsub_token_creator" {
      + etag               = (known after apply)
      + id                 = (known after apply)
      + member             = "serviceAccount:service-264262717470@gcp-sa-pubsub.iam.gserviceaccount.com"
      + role               = "roles/iam.serviceAccountTokenCreator"
      + service_account_id = (known after apply)
    }

  # google_storage_bucket.main_bucket will be updated in-place
  ~ resource "google_storage_bucket" "main_bucket" {
        id                          = "profit-scout"
        name                        = "profit-scout"
        # (15 unchanged attributes hidden)

      + lifecycle_rule {
          + action {
              + type = "AbortIncompleteMultipartUpload"
            }
          + condition {
              + age                   = 1
              + matches_prefix        = []
              + matches_storage_class = []
              + matches_suffix        = []
              + with_state            = (known after apply)
            }
        }

        # (2 unchanged blocks hidden)
    }

  # google_storage_bucket_iam_member.storage_admin_news_summarizer will be created
  + resource "google_storage_bucket_iam_member" "storage_admin_news_summarizer" {
      + bucket = "profit-scout"
      + etag   = (known after apply)
      + id     = (known after apply)
      + member = "serviceAccount:profit-scout-news-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + role   = "roles/storage.objectAdmin"
    }

  # google_storage_bucket_iam_member.storage_admin_pdf_summarizer will be created
  + resource "google_storage_bucket_iam_member" "storage_admin_pdf_summarizer" {
      + bucket = "profit-scout"
      + etag   = (known after apply)
      + id     = (known after apply)
      + member = "serviceAccount:profit-scout-pdf-sum-sa@profit-scout-456416.iam.gserviceaccount.com"
      + role   = "roles/storage.objectAdmin"
    }

  # google_storage_bucket_iam_member.storage_admin_subscriber will be created
  + resource "google_storage_bucket_iam_member" "storage_admin_subscriber" {
      + bucket = "profit-scout"
      + etag   = (known after apply)
      + id     = (known after apply)
      + member = "serviceAccount:profit-scout-subscriber-sa@profit-scout-456416.iam.gserviceaccount.com"
      + role   = "roles/storage.objectAdmin"
    }

Plan: 62 to add, 3 to change, 0 to destroy.
